{"version":3,"sources":["../src/component/component.ts"],"names":[],"mappings":";;;AAAA,mCAAoC;AAKpC,mDAAuD;AAYvD,MAAa,aAAa;IAetB,YAAY,KAAY,EAAE,GAAoB;QAC1C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IATM,MAAM,CAAC,KAAK;QACf,OAAO,aAAa,CAAC;IACzB,CAAC;IASM,KAAK,CAAC,KAAY,EAAE,GAAoB;QAC3C,OAAO,IAAW,CAAC;IACvB,CAAC;IAEM,KAAK;QACR,OAAO,aAAa,CAAC;IACzB,CAAC;IAEM,MAAM;QACT,OAAO,EAAwC,CAAC;IACpD,CAAC;CACJ;AA9BD,sCA8BC;AAKD,MAAa,iBAAkB,SAAQ,aAA+D;CAAG;AAAzG,8CAAyG;AAmBzG,SAAgB,SAAS,CAAC,KAAU;IAChC,IAAI,KAAK,CAAC,KAAK,IAAI,mBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,aAAa,EAAE;QAC3E,MAAM,KAAK,GAAG,IAAI,4BAAgB,CAAC,KAAK,CAAC,CAAC;QAC1C,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;KACzB;IACD,OAAO,CAA8C,MAAS,EAAE,EAAE;QAC9D,MAAM,KAAK,GAAG,IAAI,4BAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAClD,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC,CAAA;AACL,CAAC;AATD,8BASC","file":"../../component/component.js","sourcesContent":["import { isFunction } from 'lodash';\nimport {\n    ComponentOptionsBase, ComputedOptions, MethodOptions,\n    ComponentOptionsMixin, EmitsOptions, SetupContext, ComputedRef, ComponentObjectPropsOptions\n} from 'vue';\nimport { ComponentFactory } from './factory/component';\n\ntype ProxySetupData<T> = {\n    [P in keyof T]: ComputedRef<T[P]>;\n};\n\n/**\n * static class .\n * static _root is extends root class type, it's enum for facotry .\n * _root same as above .\n * setup is init data and handles hook, this's same to vue defineComponent setup .\n */\nexport class PureComponent<\n    Props = any, RawBindings = any, D = any, C extends ComputedOptions = any, M extends MethodOptions = any,\n    Mixin extends ComponentOptionsMixin = any, Extends extends ComponentOptionsMixin = any,\n    E extends EmitsOptions = any, EE extends string = string, Defaults = {}\n    > implements ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E, EE, Defaults> {\n\n    public static _class: <C extends PureComponentClass<PureComponent>>() => C;\n\n    public static _root() {\n        return PureComponent;\n    }\n\n    public state!: ProxySetupData<RawBindings> | ProxySetupData<this>;\n    public props: Props;\n\n    constructor(props: Props, ctx: SetupContext<E>) {\n        this.props = props;\n    }\n\n    public setup(props: Props, ctx: SetupContext<E>) {\n        return this as any;\n    }\n\n    public _root() {\n        return PureComponent;\n    }\n\n    public _props(): ComponentObjectPropsOptions<Props> {\n        return {} as ComponentObjectPropsOptions<Props>;\n    }\n}\n\n/**\n * base class ts type the limit .\n */\nexport class PureComponentType extends PureComponent<any, any, any, any, any, any, any, any, any, any>{ }\nexport type PureComponentClass<\n    V, Props = any, RawBindings = any, D = any, C extends ComputedOptions = any, M extends MethodOptions = any,\n    Mixin extends ComponentOptionsMixin = any, Extends extends ComponentOptionsMixin = any,\n    E extends EmitsOptions = any, EE extends string = string, Defaults = {}\n    > = (new (...args: any[]) => V & PureComponent<Props, RawBindings, D, C, M, Mixin, Extends, E, EE, Defaults>) & typeof PureComponentType;\n\n/**\n * Factory vue render ctx and class Proxy Object output .\n * @param target @Component decorator of vue component class .\n */\nexport function Component<C extends PureComponentClass<PureComponent>>(target: C): C;\nexport function Component<\n    Props = any, RawBindings = any, D = any, C extends ComputedOptions = any, M extends MethodOptions = any,\n    Mixin extends ComponentOptionsMixin = any, Extends extends ComponentOptionsMixin = any,\n    E extends EmitsOptions = any, EE extends string = string, Defaults = {}\n>(\n    props: ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E, EE, Defaults>\n): <C extends PureComponentClass<PureComponent>>(target: C) => C;\nexport function Component(props: any) {\n    if (props._root && isFunction(props._root) && props._root() === PureComponent) {\n        const proxy = new ComponentFactory(props);\n        return proxy.output();\n    }\n    return <C extends PureComponentClass<PureComponent>>(target: C) => {\n        const proxy = new ComponentFactory(target, props);\n        return proxy.output();\n    }\n}\n"]}