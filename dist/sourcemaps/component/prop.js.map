{"version":3,"sources":["../src/component/prop.ts"],"names":[],"mappings":";;;AAAA,2CAA4C;AAE5C,mCAAoC;AACpC,qCAAoC;AAIpC,SAAgB,IAAI,CAAC,KAA0B,EAAE,GAAY;IACzD,IAAI,GAAG,IAAI,KAAK,YAAY,yBAAa,IAAI,KAAK,CAAC,KAAK,IAAI,mBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,yBAAa,EAAE;QACpH,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QAC9B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACjB,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE;YAC9B,GAAG;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3B,CAAC;YACD,GAAG,CAAC,KAAK;gBACL,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YACnC,CAAC;SACJ,CAAC,CAAC;QACH,OAAO,CAAC,cAAc,CAAC,iBAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;KACtD;IACD,OAAO,CAAC,MAAqB,EAAE,IAAY,EAAE,EAAE;QAC3C,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE;YAChC,GAAG;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC;YACD,GAAG,CAAC,KAAK;gBACL,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACpC,CAAC;SACJ,CAAC,CAAC;QACH,OAAO,CAAC,cAAc,CAAC,iBAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC,CAAA;AACL,CAAC;AA7BD,oBA6BC","file":"../../component/prop.js","sourcesContent":["import { PureComponent } from './component';\nimport { Prop as Pp } from 'vue';\nimport { isFunction } from 'lodash';\nimport { PROPSKEY } from './symbol';\n\nexport function Prop(target: PureComponent, key: string): void;\nexport function Prop<T, D = T>(options: Pp<T, D>): (target: PureComponent, key: string) => void;\nexport function Prop(props: any | PureComponent, key?: string) {\n    if (key && props instanceof PureComponent && props._root && isFunction(props._root) && props._root() === PureComponent) {\n        const aprops = props._props();\n        aprops[key] = {};\n        props._props = (() => aprops).bind(props);\n        Object.defineProperty(props, key, {\n            get() {\n                return this.props[key];\n            },\n            set(value) {\n                return this.props[key] = value;\n            }\n        });\n        Reflect.defineMetadata(PROPSKEY, true, props, key);\n    }\n    return (target: PureComponent, akey: string) => {\n        const aprops = target._props();\n        aprops[akey] = props;\n        target._props = (() => aprops).bind(target);\n        Object.defineProperty(target, akey, {\n            get() {\n                return this.props[akey];\n            },\n            set(value) {\n                return this.props[akey] = value;\n            }\n        });\n        Reflect.defineMetadata(PROPSKEY, true, target, akey);\n    }\n}"]}