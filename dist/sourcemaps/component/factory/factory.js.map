{"version":3,"sources":["../src/component/factory/factory.ts"],"names":[],"mappings":";;;AACA,sCAAkF;AAOlF,MAAa,OAAO;IAEhB,IAAW,QAAQ;QACf,OAAO,iBAAQ,CAAC;IACpB,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,mBAAU,CAAC;IACtB,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,iBAAQ,CAAC;IACpB,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,iBAAQ,CAAC;IACpB,CAAC;IAED,IAAW,WAAW;QAClB,OAAO,oBAAW,CAAC;IACvB,CAAC;IAEM,MAAM,CAAI,GAAG,KAAU;QAC1B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IAEM,SAAS,CAAC,MAAqB,EAAE,YAAoB;QACxD,OAAO,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,KAAK,CAAC;IAC/E,CAAC;IAEM,OAAO,CAAC,MAAqB,EAAE,YAAoB;QACtD,OAAO,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,KAAK,CAAC;IAC7E,CAAC;IAEM,OAAO,CAAC,MAAqB,EAAE,YAAoB;QACtD,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC;IAC7F,CAAC;IAEM,WAAW,CAAC,MAAqB,EAAE,YAAoB;QAC1D,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC;IAC9F,CAAC;IAEM,UAAU,CAAC,MAAqB,EAAE,YAAoB;QACzD,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC;IAChG,CAAC;IAEM,cAAc,CAAC,MAAqB,EAAE,YAAoB;QAC7D,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC;IACjG,CAAC;CACJ;AAjDD,0BAiDC","file":"../../../component/factory/factory.js","sourcesContent":["import { PureComponent } from '../component';\nimport { STATEKEY, DYNAMICKEY, PROPSKEY, PROXYKEY, COMPUTEDKEY } from '../symbol';\n\nexport interface FactoryBase {\n    output<T>(...props: any): T;\n    isDynamic(target: PureComponent, prototypeKey: string): boolean;\n}\n\nexport class Factory implements FactoryBase {\n\n    public get proxyKey() {\n        return PROXYKEY;\n    }\n\n    public get dynamicKey() {\n        return DYNAMICKEY;\n    }\n\n    public get propsKey() {\n        return PROPSKEY;\n    }\n\n    public get stateKey() {\n        return STATEKEY;\n    }\n\n    public get computedKey() {\n        return COMPUTEDKEY;\n    }\n\n    public output<T>(...props: any): T {\n        throw new Error('Method not implemented.');\n    }\n\n    public isDynamic(target: PureComponent, prototypeKey: string): boolean {\n        return Reflect.getMetadata(this.dynamicKey, target, prototypeKey) || false;\n    }\n\n    public isProps(target: PureComponent, prototypeKey: string): boolean {\n        return Reflect.getMetadata(this.propsKey, target, prototypeKey) || false;\n    }\n\n    public isState(target: PureComponent, prototypeKey: string): boolean {\n        return (Reflect.getMetadata(this.stateKey, target, prototypeKey) || {}).isState || false;\n    }\n\n    public stateEffect(target: PureComponent, prototypeKey: string) {\n        return (Reflect.getMetadata(this.stateKey, target, prototypeKey) || {}).callback || false;\n    }\n\n    public isComputed(target: PureComponent, prototypeKey: string): boolean {\n        return (Reflect.getMetadata(this.stateKey, target, prototypeKey) || {}).isComputed || false;\n    }\n\n    public computedEffect(target: PureComponent, prototypeKey: string) {\n        return (Reflect.getMetadata(this.computedKey, target, prototypeKey) || {}).callback || false;\n    }\n}"]}