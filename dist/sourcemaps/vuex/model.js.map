{"version":3,"sources":["../src/vuex/model.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,yDAAuC;AACvC,mEAAmF;AAEnF,mCAAgD;AAGhD,MAAa,UAAuC,SAAQ,mCAAQ;IAIzD,MAAM,CAAC,KAAK;QACf,OAAO,UAAU,CAAC;IACtB,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,QAA+C;QAChE,OAAO,GAAG,IAAI,CAAC,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/C,CAAC;CACJ;AAXD,gCAWC;AAID,SAAS,YAAY,CAAI,MAAmB;IACxC,IAAI,CAAE,MAAc,CAAC,EAAE,EAAE;QACpB,MAAc,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KACpG;IACA,MAAc,CAAC,IAAI,GAAG,EAAE,CAAC;IAC1B,YAAG,CAAC,cAAK,CAAC,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QACrE,MAAc,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAClB,CAAC;AAMD,SAAgB,MAAM,CAAC,OAAY;IAC/B,IAAI,OAAO,CAAC,KAAK,IAAI,mBAAU,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE,KAAK,UAAU,EAAE;QAC9E,OAAO,+BAAO,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;KACjF;SAAM;QACH,OAAO,CAAC,MAAmC,EAAE,EAAE;YAC3C,MAAM,KAAK,GAAe,OAAO,CAAC,KAAK,CAAC;YACxC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE;gBACnC,GAAG;oBACC,OAAO,KAAK,CAAC;gBACjB,CAAC;aACJ,CAAC,CAAC;YACH,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;YACpC,IAAI,OAAO,CAAC,OAAO,KAAK,IAAI,EAAE;gBAC1B,IAAI,OAAO,CAAC,IAAI,EAAE;oBAAE,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;iBAAE;gBAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;oBAAE,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC;iBAAE;gBAChD,OAAO,+BAAO,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,OAAO,EAAmB,CAAC,CAAC,MAAM,CAAC,CAAC;aAC7E;YAED,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,+BAAO,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,OAAO,EAAmB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACxG,CAAC,CAAA;KACJ;AACL,CAAC;AArBD,wBAqBC","file":"../../vuex/model.js","sourcesContent":["export * from 'vuex-module-decorators';\nimport { VuexModule as VxModule, Module as VModule } from 'vuex-module-decorators';\nimport { Module as Mod, Store } from 'vuex';\nimport { isFunction, map, merge } from 'lodash';\nimport { ModuleOptions } from 'vuex-module-decorators/dist/types/moduleoptions';\n\nexport class VuexModule<S = ThisType<any>, R = any> extends VxModule {\n    public static id: string;\n    public static keys: { [x: string]: string };\n    public static readonly store: Store<ThisType<any>>;\n    public static _root() {\n        return VuexModule;\n    }\n    // tslint:disable-next-line:ban-types\n    public static action(callback: (model: any & VuexModule) => Function) {\n        return `${this.id}/${callback(this.keys)}`;\n    }\n}\n\nexport type VuexModuleClass<V> = (new (...args: any[]) => V & VuexModule) & typeof VuexModule;\n\nfunction createdModel<S>(module: Mod<S, any>): any {\n    if (!(module as any).id) {\n        (module as any).id = Number(Math.random().toString().substring(3, 10) + Date.now()).toString(36);\n    }\n    (module as any).keys = {};\n    map(merge({}, module.actions, module.mutations, module.getters), (o, i) => {\n        (module as any).keys[i] = i;\n    });\n    return module;\n}\n\n// tslint:disable-next-line:ban-types\nexport function Module<S>(module: Function & Mod<S, any>): ClassDecorator;\nexport function Module<S>(options: ModuleOptions): ClassDecorator;\nexport function Module<S>(options: { store: Store<any> }): ClassDecorator;\nexport function Module(options: any): any {\n    if (options._root && isFunction(options._root) && options._root() === VuexModule) {\n        return VModule({ namespaced: true, name: options.id })(createdModel(options));\n    } else {\n        return (target: VuexModuleClass<VuexModule>) => {\n            const store: Store<any> = options.store;\n            Object.defineProperty(target, 'store', {\n                get() {\n                    return store;\n                }\n            });\n            const module = createdModel(target);\n            if (options.dynamic === true) {\n                if (options.name) { module.id = options.name; }\n                if (!options.name) { options.name = module.id; }\n                return VModule({ namespaced: true, ...options } as ModuleOptions)(module);\n            }\n\n            store.registerModule(module.id, VModule({ namespaced: true, ...options } as ModuleOptions)(module));\n        }\n    }\n}\n"]}